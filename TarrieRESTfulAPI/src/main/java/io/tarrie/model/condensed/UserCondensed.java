package io.tarrie.model.condensed;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.tarrie.utilities.Utility;
import io.tarrie.database.contants.DbAttributes;
import io.tarrie.database.contants.DbConstants;
import io.tarrie.model.constants.CharacterLimit;

import javax.mail.internet.AddressException;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

@DynamoDBDocument
@DynamoDBTable(tableName = DbConstants.BASE_TABLE)
@ApiModel
public class UserCondensed {

    private String id;
    private String idCopy;
    private  String imgPath;
    private String name;
    private String emailAddr;

    // Hash key - primary key
    @DynamoDBHashKey(attributeName = DbAttributes.HASH_KEY)
    @ApiModelProperty(notes = "The unique identifier for the user", example = "USR#beck_b_123")
    @NotNull
    @Size(min=1, max= CharacterLimit.SMALL)
    public String getId() {
        return id;
    }

    // range key
    @DynamoDBRangeKey(attributeName=DbAttributes.SORT_KEY)
    public String getIdCopy() {
        return id;
    }

    @DynamoDBAttribute(attributeName = DbAttributes.NAME)
    @ApiModelProperty(notes = "the username")
    @NotNull
    @Size(min=1, max= CharacterLimit.SMALL)
    public String getName() {
        return name;
    }


    @DynamoDBAttribute(attributeName = DbAttributes.DATA)
    @ApiModelProperty(notes = "Email address of the user")
    @NotNull
    public String getEmailAddr() {
        return emailAddr;
    }


    @DynamoDBAutoGeneratedDefault(DbConstants.DEFAULT_USER_IMG)
    @DynamoDBAttribute(attributeName = DbAttributes.IMG_PATH)
    @ApiModelProperty(notes = "url that holds user profile pic")
    @NotNull
    public String getImgPath() {
        return imgPath;
    }


    public void setId(String userId) {
        this.id = userId;
    }
    public void setImgPath(String imgPath) {
        this.imgPath = imgPath;
    }
    public void setEmailAddr(String email) throws AddressException {
        emailAddr= Utility.getEmailAddressFromString(email).toString();
    }
    public void setName(String name) {
        this.name = name;
    }
    public void setIdCopy(String userIdCopy) {
        this.id = userIdCopy;
    }
}
